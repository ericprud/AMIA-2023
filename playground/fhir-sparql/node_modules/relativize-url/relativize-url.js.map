{"version":3,"file":"relativize-url.js","sources":["../../../../../../fhircat/fhir-sparql/fhir-sparql-js/node_modules/relativize-url/relativize-url.js"],"sourcesContent":["class RelativizeUrl {\n  static components = [\n    {name: 'protocol', write: u => u.protocol },\n    {name: 'hostname', write: u => '//' + u.hostname },\n    {name: 'port', write: u => ':' + u.port },\n    {name: 'pathname', write: (u, frm, relativize) => {\n      if (!relativize) return u.pathname;\n      const f = frm.pathname.split('/').slice(1);\n      const t = u.pathname.split('/').slice(1);\n      const maxDepth = Math.max(f.length, t.length);\n\n      let start = 0;\n      while(start < maxDepth && f[start] === t[start]) ++start;\n      const rel = f.slice(start+1).map(c => '..').concat(t.slice(start === f.length ? start - 1 : start)).join('/');\n      return rel.length <= u.pathname.length ? rel : u.pathname\n    }},\n    {name: 'search', write: u => u.search },\n    {name: 'hash', write: u => u.hash},\n  ];\n\n  constructor (base, options) { this.base = base; this.options = options; }\n\n  relate (rel) { return RelativizeUrl.relativize(rel, this.base, this.options); }\n\n  static relativize (rel, base, opts = {}) { // opts not yet used\n    const from = new URL(base);\n    const to = new URL(rel, from);\n    let ret = '';\n    for (let component of RelativizeUrl.components) {\n      if (ret) { // force abs path if e.g. host was diffferent\n        if (to[component.name]) {\n          ret += component.write(to, from, false);\n        }\n      } else if (from[component.name] !== to[component.name]) {\n        ret = component.write(to, from, true);\n      }\n    }\n    return ret;\n  }\n}\n\n/* istanbul ignore next */\nif (typeof require !== \"undefined\" && typeof exports !== \"undefined\")\n  module.exports = RelativizeUrl;\n"],"names":["require"],"mappings":"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","x_google_ignoreList":[0]}