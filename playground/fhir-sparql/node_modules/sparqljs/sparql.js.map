{"version":3,"file":"sparql.js","sources":["../../../../../../fhircat/fhir-sparql/fhir-sparql-js/node_modules/sparqljs/sparql.js"],"sourcesContent":["var Parser = require('./lib/SparqlParser').Parser;\nvar Generator = require('./lib/SparqlGenerator');\nvar Wildcard = require(\"./lib/Wildcard\").Wildcard;\nvar { DataFactory } = require('rdf-data-factory');\n\nmodule.exports = {\n  /**\n   * Creates a SPARQL parser with the given pre-defined prefixes and base IRI\n   * @param options {\n   *   prefixes?: { [prefix: string]: string },\n   *   baseIRI?: string,\n   *   factory?: import('rdf-js').DataFactory,\n   *   sparqlStar?: boolean,\n   *   skipValidation?: boolean,\n   *   skipUngroupedVariableCheck?: boolean\n   * }\n   */\n  Parser: function ({ prefixes, baseIRI, factory, sparqlStar, skipValidation, skipUngroupedVariableCheck, pathOnly } = {}) {\n\n    // Create a copy of the prefixes\n    var prefixesCopy = {};\n    for (var prefix in prefixes || {})\n      prefixesCopy[prefix] = prefixes[prefix];\n\n    // Create a new parser with the given prefixes\n    // (Workaround for https://github.com/zaach/jison/issues/241)\n    var parser = new Parser();\n    parser.parse = function () {\n      Parser.base = baseIRI || '';\n      Parser.prefixes = Object.create(prefixesCopy);\n      Parser.factory = factory || new DataFactory();\n      Parser.sparqlStar = Boolean(sparqlStar);\n      Parser.pathOnly = Boolean(pathOnly);\n      // We keep skipUngroupedVariableCheck for compatibility reasons.\n      Parser.skipValidation = Boolean(skipValidation) || Boolean(skipUngroupedVariableCheck)\n      return Parser.prototype.parse.apply(parser, arguments);\n    };\n    parser._resetBlanks = Parser._resetBlanks;\n    return parser;\n  },\n  Generator: Generator,\n  Wildcard: Wildcard,\n};\n"],"names":["require$$0","require$$1","require$$2","require$$3"],"mappings":";;;;;;;AAAA,IAAI,MAAM,GAAGA,cAA6B,CAAC,MAAM,CAAC;AAClD,IAAI,SAAS,GAAGC,eAAgC,CAAC;AACjD,IAAI,QAAQ,GAAGC,UAAyB,CAAC,QAAQ,CAAC;AAClD,IAAI,EAAE,WAAW,EAAE,GAAGC,cAA2B,CAAC;AAClD;AACA,IAAA,MAAc,GAAG;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,MAAM,EAAE,UAAU,EAAE,QAAQ,EAAE,OAAO,EAAE,OAAO,EAAE,UAAU,EAAE,cAAc,EAAE,0BAA0B,EAAE,QAAQ,EAAE,GAAG,EAAE,EAAE;AAC3H;AACA;AACA,IAAI,IAAI,YAAY,GAAG,EAAE,CAAC;AAC1B,IAAI,KAAK,IAAI,MAAM,IAAI,QAAQ,IAAI,EAAE;AACrC,MAAM,YAAY,CAAC,MAAM,CAAC,GAAG,QAAQ,CAAC,MAAM,CAAC,CAAC;AAC9C;AACA;AACA;AACA,IAAI,IAAI,MAAM,GAAG,IAAI,MAAM,EAAE,CAAC;AAC9B,IAAI,MAAM,CAAC,KAAK,GAAG,YAAY;AAC/B,MAAM,MAAM,CAAC,IAAI,GAAG,OAAO,IAAI,EAAE,CAAC;AAClC,MAAM,MAAM,CAAC,QAAQ,GAAG,MAAM,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC;AACpD,MAAM,MAAM,CAAC,OAAO,GAAG,OAAO,IAAI,IAAI,WAAW,EAAE,CAAC;AACpD,MAAM,MAAM,CAAC,UAAU,GAAG,OAAO,CAAC,UAAU,CAAC,CAAC;AAC9C,MAAM,MAAM,CAAC,QAAQ,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC;AAC1C;AACA,MAAM,MAAM,CAAC,cAAc,GAAG,OAAO,CAAC,cAAc,CAAC,IAAI,OAAO,CAAC,0BAA0B,EAAC;AAC5F,MAAM,OAAO,MAAM,CAAC,SAAS,CAAC,KAAK,CAAC,KAAK,CAAC,MAAM,EAAE,SAAS,CAAC,CAAC;AAC7D,KAAK,CAAC;AACN,IAAI,MAAM,CAAC,YAAY,GAAG,MAAM,CAAC,YAAY,CAAC;AAC9C,IAAI,OAAO,MAAM,CAAC;AAClB,GAAG;AACH,EAAE,SAAS,EAAE,SAAS;AACtB,EAAE,QAAQ,EAAE,QAAQ;AACpB;;;;","x_google_ignoreList":[0]}