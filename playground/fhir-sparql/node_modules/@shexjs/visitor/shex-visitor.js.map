{"version":3,"file":"shex-visitor.js","sources":["../../../../../../../fhircat/fhir-sparql/fhir-sparql-js/node_modules/@shexjs/visitor/shex-visitor.js"],"sourcesContent":["\nclass ShExVisitor {\n  constructor (...ctor_args) {\n    this.ctor_args = ctor_args;\n  }\n\n  static isTerm (t) {\n    return typeof t !== \"object\" || \"value\" in t && Object.keys(t).reduce((r, k) => {\n      return r === false ? r : [\"value\", \"type\", \"language\"].indexOf(k) !== -1;\n    }, true);\n  }\n\n  static isShapeRef (expr) {\n    return typeof expr === \"string\" // test for JSON-LD @ID\n  }\n\n  static visitMap (map, val) {\n    const ret = {};\n    Object.keys(map).forEach(function (item) {\n      ret[item] = val(map[item]);\n    });\n    return ret;\n  }\n\n  runtimeError (e) {\n    throw e;\n  }\n\n  visitSchema (schema, ...args) {\n    const ret = { type: \"Schema\" };\n    this._expect(schema, \"type\", \"Schema\");\n    this._maybeSet(schema, ret, \"Schema\",\n                   [\"@context\", \"prefixes\", \"base\", \"imports\", \"startActs\", \"start\", \"shapes\"],\n                   [\"_base\", \"_prefixes\", \"_index\", \"_sourceMap\", \"_locations\"],\n                   ...args\n                  );\n    return ret;\n  }\n\n  visitPrefixes (prefixes, ...args) {\n    return prefixes === undefined ?\n      undefined :\n      ShExVisitor.visitMap(prefixes, function (val) {\n        return val;\n      });\n  }\n\n  visitIRI (i, ...args) {\n    return i;\n  }\n\n  visitImports (imports, ...args) {\n    return imports.map((imp) => {\n      return this.visitIRI(imp, args);\n    });\n  }\n\n  visitStartActs (startActs, ...args) {\n    return startActs === undefined ?\n      undefined :\n      startActs.map((act) => {\n        return this.visitSemAct(act, ...args);\n      });\n  }\n\n  visitSemActs (semActs, ...args) {\n    if (semActs === undefined)\n      return undefined;\n    const ret = []\n    Object.keys(semActs).forEach((label) => {\n      ret.push(this.visitSemAct(semActs[label], label, ...args));\n    });\n    return ret;\n  }\n\n  visitSemAct (semAct, label, ...args) {\n    const ret = { type: \"SemAct\" };\n    this._expect(semAct, \"type\", \"SemAct\");\n\n    this._maybeSet(semAct, ret, \"SemAct\",\n                   [\"name\", \"code\"], null, ...args);\n    return ret;\n  }\n\n  visitShapes (shapes, ...args) {\n    if (shapes === undefined)\n      return undefined;\n    return shapes.map(\n      shapeExpr =>\n      this.visitShapeDecl(shapeExpr, ...args)\n    );\n  }\n\n  visitShapeDecl (decl, ...args) {\n    return this._maybeSet(decl, { type: \"ShapeDecl\" }, \"ShapeDecl\",\n                          [\"id\", \"abstract\", \"restricts\", \"shapeExpr\"], null, ...args);\n  }\n\n  visitShapeExpr (expr, ...args) {\n    if (ShExVisitor.isShapeRef(expr))\n      return this.visitShapeRef(expr, ...args)\n    switch (expr.type) {\n    case \"Shape\": return this.visitShape(expr, ...args);\n    case \"NodeConstraint\": return this.visitNodeConstraint(expr, ...args);\n    case \"ShapeAnd\": return this.visitShapeAnd(expr, ...args);\n    case \"ShapeOr\": return this.visitShapeOr(expr, ...args);\n    case \"ShapeNot\": return this.visitShapeNot(expr, ...args);\n    case \"ShapeExternal\": return this.visitShapeExternal(expr, ...args);\n    default:\n      throw Error(\"unexpected shapeExpr type: \" + expr.type);\n    }\n  }\n\n  visitValueExpr (expr, ...args) {\n    return this.visitShapeExpr(expr, ...args); // call potentially overloaded visitShapeExpr\n  }\n\n  // _visitShapeGroup: visit a grouping expression (shapeAnd, shapeOr)\n  _visitShapeGroup (expr, ...args) {\n    this._testUnknownAttributes(expr, [\"shapeExprs\"], expr.type, this.visitShapeNot)\n    const r = { type: expr.type };\n    if (\"id\" in expr)\n      r.id = expr.id;\n    r.shapeExprs = expr.shapeExprs.map((nested) => {\n      return this.visitShapeExpr(nested, ...args);\n    });\n    return r;\n  }\n\n  // _visitShapeNot: visit negated shape\n  visitShapeNot (expr, ...args) {\n    this._testUnknownAttributes(expr, [\"shapeExpr\"], \"ShapeNot\", this.visitShapeNot)\n    const r = { type: expr.type };\n    if (\"id\" in expr)\n      r.id = expr.id;\n    r.shapeExpr = this.visitShapeExpr(expr.shapeExpr, ...args);\n    return r;\n  }\n\n  // ### `visitNodeConstraint` deep-copies the structure of a shape\n  visitShape (shape, ...args) {\n    const ret = { type: \"Shape\" };\n    this._expect(shape, \"type\", \"Shape\");\n\n    this._maybeSet(shape, ret, \"Shape\",\n                   [ \"abstract\", \"extends\",\n                     \"closed\",\n                     \"expression\", \"extra\", \"semActs\", \"annotations\"], null, ...args);\n    return ret;\n  }\n\n  _visitShapeExprList (ext, ...args) {\n    return ext.map((t) => {\n      return this.visitShapeExpr(t, ...args);\n    });\n  }\n\n  // ### `visitNodeConstraint` deep-copies the structure of a shape\n  visitNodeConstraint (shape, ...args) {\n    const ret = { type: \"NodeConstraint\" };\n    this._expect(shape, \"type\", \"NodeConstraint\");\n\n    this._maybeSet(shape, ret, \"NodeConstraint\",\n                   [ \"nodeKind\", \"datatype\", \"pattern\", \"flags\", \"length\",\n                     \"reference\", \"minlength\", \"maxlength\",\n                     \"mininclusive\", \"minexclusive\", \"maxinclusive\", \"maxexclusive\",\n                     \"totaldigits\", \"fractiondigits\", \"values\", \"annotations\", \"semActs\"], null, ...args);\n    return ret;\n  }\n\n  visitShapeRef (reference, ...args) {\n    if (typeof reference !== \"string\") {\n      let ex = Error(\"visitShapeRef expected a string, not \" + JSON.stringify(reference));\n      console.warn(ex);\n      throw ex;\n    }\n    return reference;\n  }\n\n  visitShapeExternal (expr, ...args) {\n    this._testUnknownAttributes(expr, [\"id\"], \"ShapeExternal\", this.visitShapeNot)\n    return Object.assign(\"id\" in expr ? { id: expr.id } : {}, { type: \"ShapeExternal\" });\n  }\n\n  // _visitGroup: visit a grouping expression (someOf or eachOf)\n  _visitGroup (expr, ...args) {\n    const r = Object.assign(\n      // pre-declare an id so it sorts to the top\n      \"id\" in expr ? { id: null } : { },\n      { type: expr.type }\n    );\n    r.expressions = expr.expressions.map((nested) => {\n      return this.visitExpression(nested, ...args);\n    });\n    return this._maybeSet(expr, r, \"expr\",\n                          [\"id\", \"min\", \"max\", \"annotations\", \"semActs\"], [\"expressions\"], ...args);\n  }\n\n  visitTripleConstraint (expr, ...args) {\n    return this._maybeSet(expr,\n                          Object.assign(\n                            // pre-declare an id so it sorts to the top\n                            \"id\" in expr ? { id: null } : { },\n                            { type: \"TripleConstraint\" }\n                          ),\n                          \"TripleConstraint\",\n                          [\"id\", \"inverse\", \"predicate\", \"valueExpr\",\n                           \"min\", \"max\", \"annotations\", \"semActs\"], null, ...args)\n  }\n\n  visitTripleExpr (expr, ...args) {\n    if (typeof expr === \"string\")\n      return this.visitInclusion(expr);\n    switch (expr.type) {\n    case \"TripleConstraint\": return this.visitTripleConstraint(expr, ...args);\n    case \"OneOf\": return this.visitOneOf(expr, ...args);\n    case \"EachOf\": return this.visitEachOf(expr, ...args);\n    default:\n      throw Error(\"unexpected expression type: \" + expr.type);\n    }\n  }\n\n  visitExpression (expr, ...args) {\n    return this.visitTripleExpr(expr, ...args); // call potentially overloaded visitTripleExpr\n  }\n\n  visitValues (values, ...args) {\n    return values.map((t) => {\n      return ShExVisitor.isTerm(t) || t.type === \"Language\" ?\n        t :\n        this.visitStemRange(t, ...args);\n    });\n  }\n\n  visitStemRange (t, ...args) {\n    // this._expect(t, \"type\", \"IriStemRange\");\n    if (!(\"type\" in t))\n      this.runtimeError(Error(\"expected \"+JSON.stringify(t)+\" to have a 'type' attribute.\"));\n    const stemRangeTypes = [\"IriStem\", \"LiteralStem\", \"LanguageStem\", \"IriStemRange\", \"LiteralStemRange\", \"LanguageStemRange\"];\n    if (stemRangeTypes.indexOf(t.type) === -1)\n      this.runtimeError(Error(\"expected type attribute '\"+t.type+\"' to be in '\"+stemRangeTypes+\"'.\"));\n    let stem;\n    if (ShExVisitor.isTerm(t)) {\n      this._expect(t.stem, \"type\", \"Wildcard\");\n      stem = { type: t.type, stem: { type: \"Wildcard\" } };\n    } else {\n      stem = { type: t.type, stem: t.stem };\n    }\n    if (t.exclusions) {\n      stem.exclusions = t.exclusions.map((c) => {\n        return this.visitExclusion(c, ...args);\n      });\n    }\n    return stem;\n  }\n\n  visitExclusion (c, ...args) {\n    if (!ShExVisitor.isTerm(c)) {\n      // this._expect(c, \"type\", \"IriStem\");\n      if (!(\"type\" in c))\n        this.runtimeError(Error(\"expected \"+JSON.stringify(c)+\" to have a 'type' attribute.\"));\n      const stemTypes = [\"IriStem\", \"LiteralStem\", \"LanguageStem\"];\n      if (stemTypes.indexOf(c.type) === -1)\n        this.runtimeError(Error(\"expected type attribute '\"+c.type+\"' to be in '\"+stemTypes+\"'.\"));\n      return { type: c.type, stem: c.stem };\n    } else {\n      return c;\n    }\n  }\n\n  visitInclusion (inclusion, ...args) {\n    if (typeof inclusion !== \"string\") {\n      let ex = Error(\"visitInclusion expected a string, not \" + JSON.stringify(inclusion));\n      console.warn(ex);\n      throw ex;\n    }\n    return inclusion;\n  }\n\n  _maybeSet (obj, ret, context, members, ignore, ...args) {\n    this._testUnknownAttributes(obj, ignore ? members.concat(ignore) : members, context, this._maybeSet)\n    members.forEach((member) => {\n      const methodName = \"visit\" + member.charAt(0).toUpperCase() + member.slice(1);\n      if (member in obj) {\n        const f = this[methodName];\n        if (typeof f !== \"function\") {\n          throw Error(methodName + \" not found in Visitor\");\n        }\n        const t = f.call(this, obj[member], ...args);\n        if (t !== undefined) {\n          ret[member] = t;\n        }\n      }\n    });\n    return ret;\n  }\n\n  _visitValue (v, ...args) {\n    return v;\n  }\n\n  _visitList (l, ...args) {\n    return l.slice();\n  }\n\n  _testUnknownAttributes (obj, expected, context, captureFrame) {\n    const unknownMembers = Object.keys(obj).reduce(function (ret, k) {\n      return k !== \"type\" && expected.indexOf(k) === -1 ? ret.concat(k) : ret;\n    }, []);\n    if (unknownMembers.length > 0) {\n      const e = Error(\"unknown propert\" + (unknownMembers.length > 1 ? \"ies\" : \"y\") + \": \" +\n                      unknownMembers.map(function (p) {\n                        return \"\\\"\" + p + \"\\\"\";\n                      }).join(\",\") +\n                      \" in \" + context + \": \" + JSON.stringify(obj));\n      Error.captureStackTrace(e, captureFrame);\n      throw e;\n    }\n  }\n\n  _expect (o, p, v) {\n    if (!(p in o))\n      this.runtimeError(Error(\"expected \"+JSON.stringify(o)+\" to have a .\"+p));\n    if (arguments.length > 2 && o[p] !== v)\n      this.runtimeError(Error(\"expected \"+o[p]+\" to equal \"+v));\n  }\n}\n\n// A lot of ShExVisitor's functions are the same. This creates them.\nShExVisitor.prototype.visitBase = ShExVisitor.prototype.visitStart = ShExVisitor.prototype.visitClosed = ShExVisitor.prototype[\"visit@context\"] = ShExVisitor.prototype._visitValue;\nShExVisitor.prototype.visitRestricts = ShExVisitor.prototype.visitExtends = ShExVisitor.prototype._visitShapeExprList;\nShExVisitor.prototype.visitExtra = ShExVisitor.prototype.visitAnnotations = ShExVisitor.prototype._visitList;\nShExVisitor.prototype.visitAbstract = ShExVisitor.prototype.visitInverse = ShExVisitor.prototype.visitPredicate = ShExVisitor.prototype._visitValue;\nShExVisitor.prototype.visitName = ShExVisitor.prototype.visitId = ShExVisitor.prototype.visitCode = ShExVisitor.prototype.visitMin = ShExVisitor.prototype.visitMax = ShExVisitor.prototype._visitValue;\n\nShExVisitor.prototype.visitType = ShExVisitor.prototype.visitNodeKind = ShExVisitor.prototype.visitDatatype = ShExVisitor.prototype.visitPattern = ShExVisitor.prototype.visitFlags = ShExVisitor.prototype.visitLength = ShExVisitor.prototype.visitMinlength = ShExVisitor.prototype.visitMaxlength = ShExVisitor.prototype.visitMininclusive = ShExVisitor.prototype.visitMinexclusive = ShExVisitor.prototype.visitMaxinclusive = ShExVisitor.prototype.visitMaxexclusive = ShExVisitor.prototype.visitTotaldigits = ShExVisitor.prototype.visitFractiondigits = ShExVisitor.prototype._visitValue;\nShExVisitor.prototype.visitOneOf = ShExVisitor.prototype.visitEachOf = ShExVisitor.prototype._visitGroup;\nShExVisitor.prototype.visitShapeAnd = ShExVisitor.prototype.visitShapeOr = ShExVisitor.prototype._visitShapeGroup;\nShExVisitor.prototype.visitInclude = ShExVisitor.prototype._visitValue;\n\n\n/** create indexes for schema\n */\nclass ShExIndexVisitor extends ShExVisitor {\n  constructor () {\n    super();\n    this.myIndex = {\n        shapeExprs: {},\n        tripleExprs: {}\n    };\n  }\n\n  visitTripleExpr (expression, ...args) {\n    if (typeof expression === \"object\" && \"id\" in expression)\n      this.myIndex.tripleExprs[expression.id] = expression;\n    return super.visitTripleExpr(expression, ...args);\n  };\n\n  visitShapeDecl (shapeExpr, ...args) {\n    if (typeof shapeExpr === \"object\" && \"id\" in shapeExpr)\n      this.myIndex.shapeExprs[shapeExpr.id] = shapeExpr;\n    return super.visitShapeDecl(shapeExpr, ...args);\n  };\n\n  static index (schema, ...args) {\n    const v = new ShExIndexVisitor();\n    v.visitSchema(schema, ...args);\n    return v.myIndex;\n  }\n}\n\n\nif (typeof require !== 'undefined' && typeof exports !== 'undefined')\n  module.exports = {\n    ShExVisitor,\n    ShExIndexVisitor,\n  };\n\n"],"names":["require"],"mappings":"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","x_google_ignoreList":[0]}